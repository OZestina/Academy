블로그

inteliJ, 안드로이드 -> Gradle(그레이들)
eclipse -> mvn(메이븐)
-------------------------------------------------
프로그래밍을 하기 위한 프로그램
- ide (integrated development environment); 통합된 개발 환경, eclipse
- sdk (software development kit): library(부품들의 묶음) + 컴파일러 + 실행기
-------------------------------------------------
자바: eclipse, jdk
안드로이드: 안드로이드 스튜디오, jdk
파이썬: 파이참, 파이썬
-------------------------------------------------
확장자명
exe : 실행파일(응용프로그램)
ini: 설정파일. initialize 초기 설정값 보유
	- 연결프로그램 메모장으로 열면 내용 확인 가능
-------------------------------------------------
프로그램에서 어느 정도의 램을 사용할 것인가
(수업에서는 computer ram의 절반정도를 기본값으로 설정)

	eclipse에서 사용하는 ram 변경하기 (eclipse.ini 파일 notepad로 열어서 변경)
	-Xms(기본값)
	-Xmx(maximum)
	윈도우에서는 기가바이트를 g로 인식 가능.
	맥에서는 g가 인식이 안돼서 2024m 등으로 표기해야함.
-------------------------------------------------
프로그래머가 되려면 
- 도메인(범위) 지식: msa (micro service architecture)
- 코딩력
- SQL을 통해 data를 다루는 능력
-------------------------------------------------
좋은 프로그래머
- cpu, ram을 조금 쓰는, 복잡도가 적은 코딩
- (코딩의 라인 수는 별로 상관 없다)
- 이해하기 쉬운 코드를 작성하는 프로그래머 (주석설명, 괄호 등으로 빨리 이해가능한 코드 및 대중적/회사 내 협의된 내용으로 코드 작성)

-------------------------------------------------
server
- multimedia server (video, image)
- db server (database)
- web server/http server (main page, etc.)
- etc.
-------------------------------------------------
data의 종류
- 정형
- 비정형
- 반정형
-------------------------------------------------
파이썬: 빅데이터 등 DB 프로그래밍에 많이 사용
-------------------------------------------------
포함관계는 기본적으로 중괄호({})로 표기하며,
가독성을 위해 들여쓰기 (indent)를 한다.
-------------------------------------------------
함수는 명령어
-------------------------------------------------
println : print line
문자열 출력: 쌍따옴표
문자 출력: 쌍따옴표(문자열) or 따옴표(char)
숫자출력: 없어도됨, 따옴표(char), 쌍따옴표(String)
쌍따옴표 유무의 차이 -> 도 설명해주자 (좌,우 이미지 + 설명)

쌍따옴표가 있는 내용은 모두 "문자열"로 취급해서
저장공간의 이름이어도 문자열로 프린트됨.
-------------------------------------------------
기본 데이터(primitive data): 프로그램 언어에서 기본적으로 처리하는 데이터타입
다른 데이터의 경우(ex. 문자열) 추가적인 장치(배열, class 등)가 필요
<-> 파생데이터(derived data)

숫자 정수 integer, int
숫자 실수 float, double
문자 (1글자) character, char
논리 boolean, bool => true, false

>숫자의 경우에 정수/문자(문자열) 중 어떤 저장공간에 저장할 것인지에 대해서 생각해 봐야 한다
1) 정수로 저장하는게 좋은 경우
	계산의 대상이 되는 숫자거나 (추후 계산이 필요하거나)
	자리수의 관계가 중요할 때 (709 = 7*100 + 9*1 로 인식이 필요한 경우)

2) 글자로 인식하는 게 좋은 경우
	전화번호: 0으로 시작 (C베이스 언어에서는 0으로 시작하면 8진수 숫자로 인식)
	데이터 간 계산이 필요 없는 경우 (버스번호, 사무실 호수 등)

-------------------------------------------------
[Java] 변수(variable): 저장공간의 선언과 값의 대입

(선언) 저장공간에 들어갈 데이터의 유형 + 저장공간의 이름
- 저장공간의 이름은 영문자(대,소문자), 숫자 및 언더바(_)가 사용될 수 있다
- 예약어는 저장공간의 이름으로 사용할 수 없다 (ex. class, int, char, etc.)
- 저장공간의 이름에는 띄어쓰기가 있을 수 없다
- 저장공간의 이름은 숫자로 시작할 수 없다
- 두 단어 이상으로 된 저장공간의 이름을 만들고 싶을 때의 방법 (링크1)

RAM에 만들어지는 저장공간을 변수라고 부른다.
변수(variable, 값이 변한다): RAM에 저장공간에 들어갈 값은 변할 수 있다.
변수 하나에는 하나의 값만 저장된다.
같은 변수에 새로운 값이 대입되면, 기존의 값은 삭제된다.

변수의 선언과 값의 대입(초기화)을 한 번에 할 수는 있다!
	- int x = 100;
변수가 선언되지 않으면 값을 대입하거나 변수명을 사용할 수 없다.
	- 변수 선언 윗줄에서 변수를 표기할 수 없다 (예시 이미지 필요)
	

(대입) 변수의 이름 + '=' + data (대입 연산자 '=' 사용)

변수는 선언될 때 생긴다.

java에서는 변수가 선언될 때 데이터의 유형이 결정되며,
다른 데이터의 유형이 대입될 때에는 하기와 같은 내용이 발생한다.
1) 형변환 발생 (int를 double에 대입)
2) 값누락 발생 (double을 int에 대입)
3) 에러 발생 (int를 char에 대입)

(python에서는 변수 선언 시 데이터의 유형을 명시하지 않으며, 그렇기에 데이터가 대입될때 결정된다)
-------------------------------------------------
(링크1)
	[두 단어 이상으로 된 저장공간의 이름을 만드는 방법]

	1) camelCase(낙타 표기법): 추가되는 단어 시작을 대문자로 하는 방법
	Java에서 주로 사용하는 방법
	ex) myAge avgAge
	* 첫번째 알파벳이 대문자로 표기된 경우 class로 오해될 수 있으니 사용을 자제하자

	2)  snake_case(스네이크케이스) underscore 언더바 문자
	띄어쓰기를 언더바(_)로 대체하여 사용하는 방법
	- python에서 주로 사용한다.
-------------------------------------------------
;
문장이 끝나는 것을 컴파일러에게 확인해주는 것으로,
필요한 곳에 없으면 컴파일 에러가 발생한다.
(붙이는 곳은 언어마다 다르며, 파이썬의 경우에는 필요하지 않다)

[컴파일에러 카톡 짤 추가]
-------------------------------------------------
String(문자열, 스트링)
스트링
String name = "홍길동";
-------------------------------------------------
접근 제어자(Access modifier) (총 4개)
	public
	private
	protected
	default

-------------------------------------------------
int, double, char는 소문자로 시작하는데 왜 String은 대문자인가요?

String은 기본데이터가 아니라서 그렇습니다.
String 클래스를 이용한 변수의 선언이어서 '함수'형인 것이며
class는 모두 대문자로 시작하니,
System.out.println();과 동일하게 String도 대문자로 시작하는 것입니당.
-------------------------------------------------
boolean: true/false, binary(1,0)


-------------------------------------------------
연산자 우선순위 정리 필요

