객체지향 프로그램: Java, python
절차지향 프로그램: C
-------------------------------------------------

MSA : MicroService Architecture
조각조각 나눠져서 프로그래밍 진행
애플리케이션을 느슨하게 결합된 서비스의 모임으로 구조화하는 서비스 지향 아키텍처 스타일의 일종인 소프트웨어 개발 기법이다. 마이크로서비스 아키텍처에서 서비스들은 섬세하고 프로토콜은 가벼운 편

-------------------------------------------------
프로그램 언어를 습득하는 단계
1) 변수: 데이터의 저장
2) 연산자: 저장된 데이터의 계산
3)
-------------------------------------------------
기본데이터(primitive data)
byte, short, int, long, float, double, boolean (논리) and char
(참고사이트) https://www.w3schools.com/java/java_data_types.asp

byte
int(4), double(8), boolean(1), char(2)
String: (문자열 길이 * 2) + 주소값(4 or 8byte)
	- String은 한 글자 당 char 1개라고 생각하면 됨!

int ⊂ double (double은 int를 포함한다)
int x2 = 22.0;	//error 발생
double y2 = 22;	//22.0으로 자동 형변환
-------------------------------------------------
코드는 기본적으로 위에서 아래로, 왼쪽에서 오른쪽으로 컴파일된다.
- 변수가 선언되기 이전에 사용하면 안됨
- 하단에서 값을 변환한 경우 상단에 위치한 값은 변경되지 않음
	int x = 1;
	int y = 2;
	int z = x + y; // 3 대입
	
	x = 4;
	System.out.println(z); // 6(4+2)이 아닌 3(2+1)이 프린트

- 계산의 경우 괄호를 사용해서 컴파일 시 오류가 없도록 && 원하는 값이 나오도록 해야한다
	System.out.println("x+y="+x+y); // x+y=42
	System.out.println("x+y="+(x+y)); // x+y=6

-------------------------------------------------
java에서는 정수와 정수의 계산은 무조건 정수의 결과!
	> 333/2 => 166 으로 계산 (데이터의 누락 발생)
대신 하나라도 실수면 무조건 실수의 결과 
	>333/2.0 => 166.5
변수끼리의 나눗셈 등 실수화 할 수 없는 경우 형변환을 통해 진행
average = (double) sum / count;
	>형변환하고 싶은 변수 앞에 괄호로 새로운 데이터타입을 적어줌

// casting(캐스팅): CPU가 원래 데이터의  타입을 다른 타입으로 강제로 변환
// 강제 형변환
-------------------------------------------------
자바-스프링
파이썬-장고(Django)

-------------------------------------------------
패키지 내의 다른 class/함수는 별도의 import 없이 사용할 수 있다.
library 등 다른 곳에 있는 함수사용 시 경로를 표기해주거나
	>javax.swing.JOptionPane.showInputDialog("당신의 이름은?");
import로 경로를 명시하고 해야한다.
	>import javax.swing.JOptionPane;
	>JOptionPane.showInputDialog("당신의 이름을 입력하세요.");
-------------------------------------------------
순차문: 입력-처리-출력
-------------------------------------------------
[Java] WindowBuilder를 통한 화면 구성

//프레임 생성
	JFrame f = new JFrame();
//프레임 사이즈 설정
	f.setSize(500,500);
//프레임 visibility 설정
	f.setVisible(true);

WindowBuilder는 위의 세 줄을 작성하고 실행 (builder 실행 전 프레임이 잘 뜨는지 확인하자)
-------------------------------------------------
-------------------------------------------------
-------------------------------------------------
mongoDB 반정형 데이터를 위한 DB