1. 네트워크 통신시 필요한 자바의 클래스는? 음성통화에서 전화기 역할을 수행
- socket 클래스

2. JDBC4단계를 설명하시오.
- Driver (Connector) 설정
- DB연결 (url, user, ps 필요)
- SQL문 작성
- SQL문 전송


3. 웹프로그램의 3단계

- client side: 클라이언트가 전송한 데이터를 가지고 오기

- server side: 서버가 받은 데이터를 DAO를 통해 DB에 저장

- DB side: DB처리 결과를 클라이언트에게 html로 알려주기

4. 클라이언트 측 주요기술 3가지를 각각 설명
- 데이터 (html)
- 스타일 (css)
- 동적처리 (js)

5. html은 무엇의 약자
- HyperText Markup Language

6. html은 크게 무엇과 무엇으로 구성되는가?
- 헤드 & 숄더바디

7. css를 사용하는 방법 3가지
- link out file: 외부에 css 파일 만들어서 링크로 연결
- style tag in head tag: head 태그 안에 style 태그로 설정 (전체 페이지에 적용되는 스타일)
- in tag (in-tag) 각 태그 별로 style 태그로 별도 설정 가능

8. 웹프로그램의 동작 방식을 간단 설명
- server start (서버가 먼저 구동)

- client request (클라이언트 측에서 주소 요청)

- static request (html, css, img, js) -> server response 200 statue code

- dynamic request -> server request to DB -> DB ressponse -> server response to client (DB에서 정보를 가져와야 하는 경우)


9. 생성자란?
- constructor

- 클래스 이름과 동일한 이름을 가진 메서드
- object (객체) 생성 시 자동으로 호출된다
- 무적권 void형으로 반환이 없다
- 입력값을 달리 해 오버로딩이 가능하다
- 생성자 생성 및 오버로딩을 통해 객체 생성 조건을 한정할 수 있다

10. 메서드 오버로딩이란?
- multi method with single name: 메서드를 같은 이름으로 여러개 정의하는 것
- 오버로딩 시 입력값의 종류, 개수, 순서가 달라야 한다

11. 오버라이딩이란?
- 기존에 있는 (디폴트를 포함한) 메서드를 재정의 (덮어써서 새로운 것으로 이용)

- redefinition (overwrite)

12. toString()은 왜 쓰는가?
- 변수명으로 print할 때 나오는 정보를 디폴트 값에서 원하는 값으로 변경하기 위해 사용

- 변수의 주소값 대신 값을 출력하고 싶을 때 주로 사용

13. 기본 생성자란?
- default constructor: 아무런 생성자도 정의되지 않았을 때 default로 제공하는 생성자
- 파라미터가 하나도 없는 생성자이다 (no parameter)

14. this 키워드는 무엇을 의미?
- 현재 클래스를 의미

15. 생성자 오버로딩이란? 예를 드시오. (JButton을 이용)
- public JButton() {...}                            => new JButton();
- public JButton(String s) {...}                  => new JButton("me");
- public JButton(String s, String s) {...}       => new JButton("me","you");
- public JButton(int n) {...}                      => new JButton(3);
등등 동일한 이름을 가진 생성자를 여러개 만드는 것
이러한 오버로딩을 통해 객체 생성 조건을 한정할 수 있다

16. 클래스의 구성요소는 멤버변수와 ______로 구성
- 멤버메서드

17. 메서드의 호출은 무엇을 가지고 구분하는가? 예, 메서드이름+입력파라메터개수+________+________
- 메서드명 + 입력 파라미터 개수/종류/순서 

18. OX) 생성자는 여러개 만들 수 있다.
- O

19. OX) 생성자는 클래스이름과 달라도 된다.
- X (대문자로 시작하는 것까지 똑같아야한다)

20. OX) public void 클래스이름(){ } 는 올바른 생성자이다.
- X (void가 없어야 한다)
