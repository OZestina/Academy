1. 자바가상머신이란?
- 자바 애플리케이션을 실행해주는 프로그램(Java로 개발한 프로그램을 컴파일하여 만들어지는 바이트코드를 실행시키기 위한 가상머신)
- JRE(Java Runtime Environment)에 포함되어 있으며, Java 컴파일러가 프론트엔드를 담당한다면 Java 가상 머신은 코드 최적화와 백엔드를 담당한다.

2. JVM은 무엇의 약자?
- Java Virtual Machine

3. 캡슐화, 다형성, 상속의 개념
- 캡슐화: 객체의 속성과 행위(메서드)를 하나로 묶고, 실제 구현 내용 일부를 외부에 감추는 것
- 다형성: 한 요소에 여러 개념을 넣어 놓는 것
- 상속: 새로운 클래스가 기존의 클래스의 자료와 연산을 이용할 수 있게 하는 기능

4. OOP는 무엇의 약자?
- Object Oriented Programming (객체 지향 프로그래밍)

5. OOP의 특징 3가지 이상
- 자료 추상화: 불필요한 정보는 숨기고 중요한 정보만을 표현해 프로그램을 간단히 만드는 것
- 상속: 새로운 클래스가 기존의 클래스의 자료와 연산을 이용할 수 있게 하는 기능
- 다형성 개념: 한 요소에 여러 개념을 넣어 놓는 것
- 동적 바인딩: 실행 시간 중에 일어나거나 실행 과정에서 변경될 수 있는 바인딩 (↔ 정적 바인딩)

6. 오버로딩과 오버라이딩 비교 설명
- 오버로딩은 다형성이라고도 하며, 같은 이름의 메서드가 인자의 개수나 자료형에 따라서 다른 기능을 하는 것 (같은 이름의 메서드를 여러가지로 정의)
- 오버라이딩은 같은 이름의 메서드가 여러 클래스에서 다른 기능을 하는 것 (상속받아 가지고 있는 메서드를 재정의하는 것)

7. Servlet과 JSP와의 관계
- Servlet은 JAVA코드안의 HTML코드이고 JSP는 HTML안의 JAVA코드
- JSP가 서버에서 실행될 때는 자바 프로그램으로 자동 코드 변경되어 실행되며, 이렇게 자동생성되는 자바 프로그램/자바코드를 서블릿(servlet)이라고 함
- JSP에서 Servlet으로의 코드 변경은 Tomcat내의 jsp엔진(서블릿엔진)이 가능하게 함

8. POST / GET 방식의 비교
- GET과 POST는 HTTP 메서드로 클라이언트에서 서버로 무언가를 요청할 때 사용
- GET:
1) URL 주소 끝에 파라미터로 포함되어 전송된다 (쿼리 스트링 (query string))
2) 브라우저 히스토리에 남는다
3) 길이 제한이 있다 (255자)
-POST:
1) 전송할 데이터를 HTTP 메시지 body 부분에 담아서 서버로 보낸다
2) 데이터를 전송할 때 길이 제한이 없다 (용량이 큰 데이터를 보낼 때 사용)
3) 데이터가 외부적으로 드러나는게 아니어서 보안이 필요한 부분에 많이 사용된다

9. HTTP의 구조
- Start line (request) / Status line (response)
- Headers
- Body

9-1. HTTP란?
HyperText Transfer Protocol
TCP/IP로 이루어짐

10. Session과 cookie의 공통점/차이점
- 공통점: 네트워크 연결에서 상태를 저장하기 위한 기술
- 차이점:
1) 세션은 서버의 램에 저장, 하나씩 저장했다가 하나씩 꺼내쓸 수 있음. 저장하는 타입이 아무거나 괜찮다
2) 쿠키는 클라이언트의 브라우저에 저장, 하나씩 저장했다가 전체를 서버에서 가지고 와서 꺼내써야 한다. 모두 다 스트링만 가능하다

11. MVC는 무엇의 약자?
- Model, View, Controller
- 사용자와 상호작용하는 S/W를 디자인할때 이 세가지 요소로 쪼개어 하는 것을 가리킨다

12. MVC1와 MVC2의 비교
- MVC2는 M,V,C가 잘 분리된 구조
- MVC1은 M,V,C가 잘 분리되지 않은 구조로, 모든 클라이언트 요청과 응답을 JSP가 담당
