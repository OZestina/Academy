1.배열(array), list, map을 비교하여 설명하시오.
- 배열은 저장공간의 크기를 선언할 때 지정해줘야 하고, 공간의 크기가 바뀌지 않는다
- 리스트는 저장공간의 크기를 자유롭게 조정이 가능하다 (선언할 때 지정할 필요가 없다)
- map은 <키,값>으로 저장되는 저장공간으로, 선언 시 크기를 지정할 필요가 없다

2.orm은 무엇의 약자, 무엇인가
- Object Relational Mapping 
- 객체와 DB를 자동으로 매핑해주는 것

3.스레드란? 멀티 스레드란?
- 스레드는 프로세스를 실행하는 단위
- 멀티스레드: 하나의 프로세스를 다수의 스레드로 구분해 수행 능력을 향상시키는 것 (스레드 간 자원공유 및 자원생성/관리 중복 최소화)

4.스레드와 프로세스의 차이점
- 프로세스는 작업의 단위 (운영체제로부터 자원을 할당받음)
- 스레드는 실행의 단위 (프로세스가 할당받은 자원을 이용)

- 스레드 프로그램은 여러 개의 프로세스 과정을 왔다갔다 실행해 여러 개의 프로그램이 동시에 실행되는 것처럼 보이게 하는 것
- 프로세스 프로그램은 하나의 프로세스를 모두 끝낸 후 다음 프로세스를 실행하는 것

5.DAO, DTO는 무엇의 약자? 무엇인가?
DAO: Data Access Object, DB를 사용해 데이터의 조회 및 조작을 전담하는 오브젝트
DTO: Data Transfer Object, 데이터가 담긴 객체

6.객체 지향에서 결합도는 무엇이고 어떻게 해야하는가?
- 다른 모듈에 대한 의존성의 정도
- 다른 모듈에 영향을 미치는 정도가 낮으면 결합도가 낮다
- 객체지향에서는 결합도를 낮추는 방향성을 추구한다

7.객체 지향에서 응집도는 무엇이고 어떻게 해야하는가?
- 모듈에 포함된 내부 요소들이 연관돼 있는 정도
- 하나의 메소드에 하나의 기능이 있는 경우 응집도가 높다
- 객체 지향에서는 응집도를 높이는 방향성을 추구한다

8.final class, final method, final 변수를 각각 설명하시오
- final 키워드는 수정될 수 없음을 의미!
- final class: 상속을 막은 클래스
- final method: 오버라이드를 막은 메서드
- final 변수: 최초 선언한 후 값을 수정할 수 없는 변수

9.static과 instance 변수 간의 차이
- static 변수는 static 키워드로 선언된 변수로, 클래스 객체 간 공유되는 변수. 객체를 생성하지 않아도 접근 가능
- instance는 객체 생성시 객체마다 생성되는 변수 (객체마다 생성되는 값)

10.primitive data type, reference data type의 차이
- 기본형 데이터: 변수명에 데이터가 저장됨
- 참조형 데이터: 변수명에 주소값이 저장되는 데이터. 실제 데이터는 heap영역에 저장되고, heap영역의 주소값이 변수에 저장됨

11.wrapper class는 무엇이며 예를 들어 설명
- 기본형 데이터를 객체로 포장(wrapping)해주는 클래스
- int의 wrapper class는 Integer이다
- int -> Integer : 박싱 ↔ Integer -> int : 언박싱

12.TCP와 UDP의 차이
- 둘 모두 컴퓨터 간 연결을 위한 프로토콜로, IP와 함께 사용된다
- TCP(Transmission Control Protocol)
  1) 연결이 성공해야 통신이 가능하다 (연결형 프로토콜)
  2) 일대일 통신(Unicast)
- UDP(User Datagram Protocol)
  1) 인터넷상에서 전송 신호 없이 일방적으로 데이터를 전달. (비연결형 프로토콜)
  2) 일 대 일, 일 대 다(Broadcast), 다 대 다(Multicast) 통신 가능

13.TCP/IP 4단계 구분, 설명, 예
1) 네트워크 엑세스: 물리주소(MAC-컴퓨터의 하드웨어 주소)를 참조해 장비간 전송을 정의. Ethernet
2) 인터넷 계층: 데이터 전송을 위한 논리적인 주소(IP) 할당으로 단말 구분. IP
3) 전송 계층: 통신 노드 간의 연결 제어 및 자료 송수신.TCP, UDP
4) 응용 계층: 응용프로그램(application)들이 데이터를 교환하기 위해 사용되는 프로토콜. 사용자 애플리케이션 인터페이스 담당. HTTP, DNS, 파일전송 등

14.싱글톤이란? 프로토타입과 싱글톤의 차이
- 싱글톤은 클래스 하나 당 하나의 객체만 생성하여 메서드를 사용할 수 있게 하는 것 -> 메모리를 효율적으로 활용 가능
- 프로토타입은 new 시 계속 객체가 생성된다
