1. 인스턴스 변수와 정적 변수의 차이
- 인스턴스 변수는 생성되는 클래스 객체마다 별도로 만들어지는 변수, 힙 영역에 저장됨
- 정적 변수(static변수)는 클래스에 static으로 선언된 변수로, 클래스 원본 및 생성되는 클래스가 공유하는 변수. 클래스 원본 영역이 저장되는 원본영역(static영역)에 저장된다

2. 멤버변수가 3개인 클래스의 객체가 5개 만들어졌을때, stack 영역에 만들어진 변수의 개수와 heap영역에 만들어진 변수의 개수는?
- stack 영역에는 

3. static 메서드를 만드는 이유와 알고 있는 static 메서드 2개 이상 서술
- 객체를 생성하지 않아도 클래스 이름으로 접근하여 사용할 수 있어서 자주 쓰는 기능을 static 메서드로 만들어놓으면 편하다
- System.out.println();, System.exit();

4. 일반메서드와 static 메서드의 차이점을 서술
- 일반메서드는 객체 생성후에만 사용 가능하고, static 메서드는 객체를 생성하지 않아도 클래스 이름으로 접근 가능하다

5. static 메서드를 사용하면 좋은점
- 객체를 생성하지 않아도 (클래스 이름으로 접근하여) 사용할 수 있어, 객체를 생성하지 않아도 된다 (heap영역을 쓰지 않는다)

6. static 메서드 정의시, static 변수만 사용이 가능하고 인스턴스 변수는 사용이 불가능한 이유는?
- static 메서드는 객체를 생성하지 않아도 접근해서 처리가 가능해야하기 때문에 객체를 생성하지 않아도 만들어지는 static 변수만 사용이 가능하다
- instance 변수는 객체 생성 후에 접근이 가능하기 때문에 static 메서드에서는 사용이 불가능하다

7. 알고있는 변수의 종류를 모두 서술
- 전역변수: instance 변수, static 변수(정적 변수)
- 지역변수

8. 전역변수와 지역변수의 차이점
- 선언되는 위치에 따라 다르다
- 전역변수는 클래스의 멤버변수로 선언, 지역변수는 메서드 안에 생성

9. 참조형 변수는 어느 메모리의 어느 영역을 참조한다는 것인가? (어느 영역의 주소인가?)
- heap 영역에 저장 및 heap영역의 주소값을 참조

10. 전역/지역 변수를 나누는 기준은 무엇인가?
- 변수가 선언되는 위치

11. 다음과 같은 코드시 메모리에 무슨 일이 발생하는가?
int[] num = new int[10];
- heap영역에 [ 배열 길이 + 배열 주소값 + 10칸짜리 int 저장공간 ]이 생성
- stack영역에 num이라는 변수가 생기고 heap영역에 생성도니 배열 주소값이 저장

12. 다음과 같은 코드시 메모리에 무슨 일이 발생하는가?
final int MONEY = 10000;
- 원본영역(static 영역)에 저장된다

13. 다음과 같은 코드시 메모리에 무슨 일이 발생하는가?
public static void main (String[] s) {
	Student s1 = new Student("홍길동", "mega", "011");
	Student s2 = new Student("김길동", "the", "012");
	System.out.println(s1);
}
- s1, s2 객체가 heap 영역에 생성
- s1, s2 변수가 stack 영역에 생기고 heap영역의 주소를 참조(저장)
- stack 영역에서 System.out.println 메서드 호출 및 사용(s1출력)
